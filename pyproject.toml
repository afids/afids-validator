[tool.poetry]
name = "afidsvalidator"
version = "1.3.1"
description = "Anatomical fiducials (AFIDs) validator for user placed markups"
authors = [
    "Jason Kai <kaitj>",
    "Tristan Kuehn <tkkuehn>",
    "Olivia Stanley <ostanley>",
    "AFIDs contributors",
]
license = "GPL-3.0"
include = ["afidsvalidator/afids-templates/human/*"]
packages = [{ include = "afidsvalidator" }, { include = "migrations" }]

[tool.poetry.dependencies]
python = ">=3.8, <3.12"
blinker = "^1.4"
Flask = "^3.0"
Flask-Migrate = "^4.0"
Flask-Script = "^2.0"
Flask-Login = "^0.6"
Flask-Dance = "^7.0"
SQLAlchemy = "^2.0"
gunicorn = "^21.0"
numpy = "^1.24"
plotly = "^4.12"
psycopg2-binary = "^2.8"
python-dotenv = "^1.0"
werkzeug = "^3.0"
WTForms = "^3.1"
uwsgi = { version = "^2.0", optional = true }

[tool.poetry.group.dev.dependencies]
black = "^23.10"
isort = "^5.10"
flake8 = "^5.0"
pylint = "^3.0"
pylint-sqlalchemy = "^0.3"
pylint-flask-sqlalchemy = "^0.2"
pre-commit = "^3.5"
poethepoet = "^0.24"
fabric = "^3.2"

[tool.poetry.extras]
deploy = ["uwsgi"]

[tool.poe.tasks]
setup = "pre-commit install"
isort = "isort afidsvalidator test"
black = "black afidsvalidator test -l 79"
flake8 = "flake8 afidsvalidator test"
pylint = "pylint afidsvalidator test"
quality = ["isort", "black", "flake8", "pylint"]
test = "python -m unittest"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.pylint.main]
load-plugins = "pylint_flask_sqlalchemy"
