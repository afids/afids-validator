[tool.poetry]
name = "afidsvalidator"
version = "v1.2.5"
description = "Anatomical fiducials (AFIDs) validator for user placed markups"
authors = ["Jason Kai <kaitj>", "Tristan Kuehn <tkkuehn>", "Olivia Stanley <ostanley>", "AFIDs contributors"]
license = "GPL-3.0"
include = ["afidsvalidator/afids-templates/human/*"]
packages = [
    { include = "afidsvalidator" },
    { include = "migrations" },
]

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
importlib-resources = { version = "^5.9", python = "<3.8" }
blinker = "^1.4"
Flask = "^2.1"
Flask-Migrate = "^2.5"
Flask-Script = "^2.0"
Flask-Login = "^0.6"
Flask-Dance = {extras = ["sqla"], version = "^6.0"}
SQLAlchemy = "^1.4"
gunicorn = "^20.0"
numpy = "^1.17"
plotly = "^4.12"
psycopg2-binary = "^2.8"
python-dotenv = "^0.17"
WTForms = "^2.2"
uwsgi = { version = "^2.0.20", optional = true }

[tool.poetry.group.dev.dependencies]
black = "^22.8.0"
isort = "^5.10.1"
flake8 = "^5.0.4"
pylint = "^2.15.3"
pylint-sqlalchemy = "^0.2"
pylint-flask-sqlalchemy = "^0.2"
pre-commit = "^2.15"
poethepoet = "^0.16.2"
fabric = "^2.7"

[tool.poetry.extras]
deploy = ["uwsgi"]

[tool.poe.tasks]
setup = "pre-commit install"
isort = "isort afidsvalidator test"
black = "black afidsvalidator test -l 79"
flake8 = "flake8 afidsvalidator test"
pylint = "pylint afidsvalidator test"
quality = ["isort", "black", "flake8", "pylint"]
test = "python -m unittest"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79

[tool.pylint.main]
load-plugins = "pylint_flask_sqlalchemy"
