name: AFIDs Validator CI Workflow

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, closed]

jobs:
  test:
    name: Setup environment & test
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Setup python environment
        uses: khanlab/actions/.github/actions/action-setup_task-installPyProject@v0.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache-id: ${{ github.event.pull_request.id }}
          install-library: true

      - name: Start PostgreSQL services
        shell: bash
        run: |
          sudo systemctl start postgresql.service
          pg_isready

      - name: Setup PostgreSQL db
        shell: bash
        env:
          psql_db_owner: testuser # PostgreSQL User
          psql_db_pw: testpass # PostgreSQL Pass
          psql_db_name: testdb # PostgreSQL DB
        run: |
          sudo -u postgres psql --command="CREATE USER $psql_db_owner PASSWORD '$psql_db_pw'"
          sudo -u postgres createdb --owner=$psql_db_owner $psql_db_name
          PGPASSWORD=$psql_db_pw psql --username=$psql_db_owner --host=localhost --list $psql_db_name

      - name: Test AFIDs validator
        shell: bash
        env:
          FLASK_ENV: testing # Sets flask environment
          DATABASE_URL: postgresql://testuser:testpass@localhost/testdb
        run: |
          poetry run python -m unittest

  linting:
    name: Lint code
    needs: [test]
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Setup python environment
        uses: khanlab/actions/.github/actions/action-setup_task-installPyProject@v0.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache-id: ${{ github.event.pull_request.id }}

      - name: isort
        run: poetry run isort afidsvalidator test -c

      - name: black
        run: poetry run black afidsvalidator test --check

      - name: flake8
        run: poetry run flake8 afidsvalidator test

      - name: pylint
        run: poetry run pylint afidsvalidator test

  assign-reviewer:
    needs: [linting]
    if: github.event.pull_request.assignee == null
    uses: khanlab/actions/.github/workflows/workflow-pr_task-assignReviewer.yml@v0.2.0

  update_changelog:
    if: github.event.pull_request.merged == true
    uses: khanlab/actions/.github/workflows/workflow-version_task-semverGithub.yml@v0.2.0
    secrets:
      BP-PAT: ${{ secrets.BP_PAT_TOKEN }}
